types = {
    type[innovation] = {
        path = "game/common/culture/innovations"
        images = {
            ## primary
            icon = icon # filepath[gfx/interface/icons/culture_innovations]
        }
    }
}

innovation = {
    ### Key to the cultural era this innovation belongs.
    culture_era = <era>
    ### Innovation group. Can be: culture_group_military, culture_group_civic or culture_group_regional.
    group = enum[innovation_group]
    ### Path to the icon to show. If not set will use the default icon defined in NGameIcons::DEFAULT_CULTURE_INNOVATION_TYPE_ICON_PATH
    ## cardinality = 0..1
    icon = filepath[gfx/interface/icons/culture_innovations]

    ### Region where this innovation can start getting base progress. Empty means anywhere.
    ## cardinality = 0..1
    region = <region>
    ### Trigger to check if it can be unlocked by the culture. In contrast to can_progress it will be hidden otherwise. Scope: culture Default: always = yes
    ## cardinality = 0..1
    potential = single_alias_right[trigger_clause]
    ### To check if it can start being exposed. Scope: culture Default: always = yes
    ## cardinality = 0..1
    can_progress = single_alias_right[trigger_clause]

    ### Key of a building that can be unlocked. There can be more than one. This is only to show on the tooltip, it has to be maulually blocked on the object itself.
    ## cardinality = 0..inf
    unlock_building = <building>
    ### Key of a decicion that can be unlocked. There can be more than one. This is only to show on the tooltip, it has to be maulually blocked on the object itself.
    ## cardinality = 0..inf
    unlock_decision = <decision>
    ### Key of a casus belli that can be unlocked. There can be more than one. This is only to show on the tooltip, it has to be maulually blocked on the object itself.
    ## cardinality = 0..inf
    unlock_casus_belli = <casus_belli>
    ### Key of a regiment that can be unlocked. There can be more than one. Actually does unlock the MaA.
    ## cardinality = 0..inf
    unlock_maa = <maa_type>
    ### Key of a law that can be unlocked. There can be more than one. This is only to show on the tooltip, it has to be maulually blocked on the object itself.
    ## cardinality = 0..inf
    unlock_law = <law>

    # TODO: Is more than one maa_upgrade actually supported?
    ### Modifies the values of one of the base MaA types.
    ## cardinality = 0..inf
    maa_upgrade = single_alias_right[maa_upgrade]

    ### A custom effect description that will be added to the list of effects.
    ## cardinality = 0..inf
    custom = localisation

    ### Modifiers of this culture era. The culture will stash this modifier.
    ## cardinality = 0..1
    modifier = {
        ## cardinality = 0..inf
        alias_name[modifier] = alias_match_left[modifier]
    }

    ### Optional flag, relevant for the has_all_innovations trigger. Can list any number of flags for each innovation.
    ## cardinality = 0..inf
    flag = scalar
}

single_alias[maa_upgrade] = {
    ### The base MaA type to upgrade
    type = scalar
    ## cardinality = 0..1
    damage = float
    ## cardinality = 0..1
    toughness = float
    ## cardinality = 0..1
    pursue = float
    ## cardinality = 0..1
    screen = float
    ## cardinality = 0..1
    siege_value = float
    ## cardinality = 0..1
    max_size = float
}

enums = {
    enum[innovation_group] = {
        culture_group_military
        culture_group_civic
        culture_group_regional
    }
}